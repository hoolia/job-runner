#!/bin/bash
# Set KUBERNETES_MASTER to the URL of your cluster example http://kubemaster:8080
export KUBERNETES_MASTER
NODE_SELECTOR=${NODE_SELECTOR:=""}
PULL_POLICY=${PULL_POLICY:=""}

function kubectl {
  /usr/local/bin/kubectl \
    --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) \
    --certificate-authority=/run/secrets/kubernetes.io/serviceaccount/ca.crt \
    --namespace=$(cat /run/secrets/kubernetes.io/serviceaccount/namespace) \
    $*
}

. /app/processor/reap
if [[ "$EXIT_CODE" -eq 98 ]]; then
  echo 'Container creation error'
  return
else
  unset EXIT_CODE
fi


if [[ -z $(kubectl get jobs --selector=service=${JOB} 2> /dev/null ) ]]; then
  compose2kube \
    -compose-file /app/compose/$JOB.yaml \
    -pull-policy="${PULL_POLICY}" \
    -node-selector="${NODE_SELECTOR}" \
    -output-dir k8s_${JOB} > /dev/null
  OUTPUT=$(kubectl create -f k8s_${JOB}); RESULT=$?
  rm -rf k8s_${JOB}

  if [ $RESULT -ne 0 ]; then
    EXIT_CODE=101
  fi
else
  if [ "$IGNORE_OVERRUN" = true ] ; then
    echo "[${JOB}] - IGNORING OVERRUN - will not alert"
    EXIT_CODE=0
    if [[ "$FOLLOW" == *"true"* ]] ; then
      POD_NAME=$(kubectl get pods --selector=service=$JOB -o=jsonpath='{.items[*].metadata.name}')
      echo "kubectl logs -f $POD_NAME"
    fi
  else
    EXIT_CODE=100
  fi
  return
fi

#Ensure the pod is actually registered. Avoids a possible race condition
until kubectl get jobs --selector=service=${JOB} &> /dev/null
do
  sleep 0.1
done


if [[ "$FOLLOW" != *"true"* ]] ; then
  OUTPUT="Running"
  EXIT_CODE=0
else
  STATUS='Pending'
  while [ "$STATUS" == "Pending" ]
  do
    . /app/processor/reap
  done

  POD_NAME=$(kubectl get pods --selector=service=$JOB -o=jsonpath='{.items[*].metadata.name}')
  kubectl logs -f $POD_NAME &

  while [ -z "$EXIT_CODE" ]
  do
    . /app/processor/reap
  done
fi
